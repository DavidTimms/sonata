
fn main(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main0(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove1() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves1: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main1(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove2() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves2: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main2(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove3() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves3: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main3(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove4() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves4: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main5(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove5() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves5: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main6(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove6() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves6: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}

fn main7(playerMove) {
	playerBeats: get(moves, playerMove)
	if not playerBeats {
		print("invalid move")
	} else {
		cpuMove: randomMove()
		print("player picks: " & playerMove)
		print("computer picks: " & cpuMove)
		print(
			if playerMove = cpuMove
				"it's a draw!"
			else if verb: get(playerBeats cpuMove)
				playerMove & verb & cpuMove & ", player wins!"
			else
				cpuMove & get(get(moves cpuMove) playerMove) & 
					playerMove & ", computer wins!"
		)
	}
}

fn randomMove7() {
	options: list.fromArray(Object.keys(moves))
	index: Math.floor(Math.random() * options.count)
	options(index)
}

moves7: {
	Rock: {Lizard: " crushes ", Scissors: " crushes "}
	Paper: {Rock: " covers ", Spock: " disproves "}
	Scissors: {Paper: " cut ", Lizard: " decapitate "}
	Lizard: {Spock: " poisons ", Paper: " eats "}
	Spock: {Scissors: " smashes ", Rock: " vaporizes "}
}